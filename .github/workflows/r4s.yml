name: NanoPi-R4S
on:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/r4s.yml'
#  schedule:
 #   - cron: '00 00 * * *'

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@v2
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential asciidoc rsync binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler libreadline-dev ccache curl wget vim nano g++-multilib python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz scons
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
    - name: Prepare Openwrt 
      run: |
        sudo chown -R runner:runner /home/runner/work/zxcvbnm-openwrt
        cp -r ./scripts/. ./
        /bin/bash 01_r4s_prepare_openwrt.sh
    - name: Prepare Package 
      run: |
        cd openwrt
        cp -r ../scripts/. ./
        /bin/bash 02_r4s_prepare_package.sh
    - name: Convert Translation
      run: |
        cd openwrt
        /bin/bash 03_convert_translation.sh
    - name: Remove Upx
      run: |
        cd openwrt
        /bin/bash 04_remove_upx.sh
    - name: Add ACL
      run: |
        cd openwrt
        /bin/bash 05_create_acl_for_luci.sh -a
    - name: Make Config
      run: |
        cd openwrt
        mv ../seed/r4s.config .config
        make defconfig
        chmod -R 755 ./
    - name: Make Download
      run: |
        cd openwrt
        make download -j10
    - name: Make Toolchain
      run: |
        cd openwrt
        let make_process=$(nproc)+1
        make toolchain/install -j${make_process} V=s
    - name: Compile Openwrt
      run: |
        cd openwrt
        let make_process=$(nproc)+1
        make -j${make_process} V=s || make -j1 V=s
    - name: Cleaning & Packaging Firmwares
      run: |
        cd openwrt
        cp .config bin/targets/rockchip/armv8
    - name: Upload Firmwares
      uses: actions/upload-artifact@v2
      with:
        name: Openwrt SNAPSHOT NanoPi-R4S-kernel-5.4.92
        path: openwrt/bin/targets/rockchip/armv8
